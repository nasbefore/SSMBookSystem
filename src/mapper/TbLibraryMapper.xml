<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.TbLibraryMapper">
    <resultMap id="BaseResultMap" type="po.TbLibrary">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="cate_id" property="cateId" jdbcType="INTEGER"/>
        <result column="manager_id" property="managerId" jdbcType="INTEGER"/>
        <result column="bookName" property="bookname" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="press" property="press" jdbcType="VARCHAR"/>
        <result column="img" property="img" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="REAL"/>
        <result column="publishDate" property="publishdate" jdbcType="BIGINT"/>
        <result column="createDate" property="createdate" jdbcType="BIGINT"/>
        <result column="bookNum" property="booknum" jdbcType="INTEGER"/>
        <result column="barcode" property="barcode" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, cate_id, manager_id, bookName, description, author, press, img, price, publishDate, 
    createDate, bookNum,barcode
  </sql>
    <select id="selectByBarcode" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from tb_library
        where barcode = #{barcode}
    </select>
    <select id="selectByStuNum" resultType="po.TbUser" parameterType="java.lang.String">
        select *
        from tb_user
        where username = #{stuNum}
    </select>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.TbLibraryExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_library
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_library
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_library
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="po.TbLibraryExample">
        delete from tb_library
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="po.TbLibrary">
    insert into tb_library (id, cate_id, manager_id, 
      bookName, description, author, 
      press, img, price, publishDate, 
      createDate, bookNum,barcode)
    values (#{id,jdbcType=INTEGER}, #{cateId,jdbcType=INTEGER}, #{managerId,jdbcType=INTEGER}, 
      #{bookname,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{press,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{publishdate,jdbcType=BIGINT}, 
      #{createdate,jdbcType=BIGINT}, #{booknum,jdbcType=INTEGER},#{barcode})
  </insert>
    <insert id="insertSelective" parameterType="po.TbLibrary">
        insert into tb_library
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="cateId != null">
                cate_id,
            </if>
            <if test="managerId != null">
                manager_id,
            </if>
            <if test="bookname != null">
                bookName,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="press != null">
                press,
            </if>
            <if test="img != null">
                img,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="publishdate != null">
                publishDate,
            </if>
            <if test="createdate != null">
                createDate,
            </if>
            <if test="booknum != null">
                bookNum,
            </if>
            <if test="barcode != null">
                barcode,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="cateId != null">
                #{cateId,jdbcType=INTEGER},
            </if>
            <if test="managerId != null">
                #{managerId,jdbcType=INTEGER},
            </if>
            <if test="bookname != null">
                #{bookname,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="press != null">
                #{press,jdbcType=VARCHAR},
            </if>
            <if test="img != null">
                #{img,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=REAL},
            </if>
            <if test="publishdate != null">
                #{publishdate,jdbcType=BIGINT},
            </if>
            <if test="createdate != null">
                #{createdate,jdbcType=BIGINT},
            </if>
            <if test="booknum != null">
                #{booknum,jdbcType=INTEGER},
            </if>
            <if test="barcode != null">
                #{barcode,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="po.TbLibraryExample" resultType="java.lang.Integer">
        select count(*) from tb_library
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_library
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.cateId != null">
                cate_id = #{record.cateId,jdbcType=INTEGER},
            </if>
            <if test="record.managerId != null">
                manager_id = #{record.managerId,jdbcType=INTEGER},
            </if>
            <if test="record.bookname != null">
                bookName = #{record.bookname,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.press != null">
                press = #{record.press,jdbcType=VARCHAR},
            </if>
            <if test="record.img != null">
                img = #{record.img,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=REAL},
            </if>
            <if test="record.publishdate != null">
                publishDate = #{record.publishdate,jdbcType=BIGINT},
            </if>
            <if test="record.createdate != null">
                createDate = #{record.createdate,jdbcType=BIGINT},
            </if>
            <if test="record.booknum != null">
                bookNum = #{record.booknum,jdbcType=INTEGER},
            </if>
            <if test="record.barcode != null">
                barcode = #{record.barcode,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_library
        set id = #{record.id,jdbcType=INTEGER},
        cate_id = #{record.cateId,jdbcType=INTEGER},
        manager_id = #{record.managerId,jdbcType=INTEGER},
        bookName = #{record.bookname,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        author = #{record.author,jdbcType=VARCHAR},
        press = #{record.press,jdbcType=VARCHAR},
        img = #{record.img,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=REAL},
        publishDate = #{record.publishdate,jdbcType=BIGINT},
        createDate = #{record.createdate,jdbcType=BIGINT},
        bookNum = #{record.booknum,jdbcType=INTEGER},
        barcode = #{record.barcode,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="po.TbLibrary">
        update tb_library
        <set>
            <if test="cateId != null">
                cate_id = #{cateId,jdbcType=INTEGER},
            </if>
            <if test="managerId != null">
                manager_id = #{managerId,jdbcType=INTEGER},
            </if>
            <if test="bookname != null">
                bookName = #{bookname,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="press != null">
                press = #{press,jdbcType=VARCHAR},
            </if>
            <if test="img != null">
                img = #{img,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=REAL},
            </if>
            <if test="publishdate != null">
                publishDate = #{publishdate,jdbcType=BIGINT},
            </if>
            <if test="createdate != null">
                createDate = #{createdate,jdbcType=BIGINT},
            </if>
            <if test="booknum != null">
                bookNum = #{booknum,jdbcType=INTEGER},
            </if>
            <if test="barcode != null">
                barcode = #{barcode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="po.TbLibrary">
    update tb_library
    set cate_id = #{cateId,jdbcType=INTEGER},
      manager_id = #{managerId,jdbcType=INTEGER},
      bookName = #{bookname,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      publishDate = #{publishdate,jdbcType=BIGINT},
      createDate = #{createdate,jdbcType=BIGINT},
      bookNum = #{booknum,jdbcType=INTEGER},
      barcode = #{barcode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>