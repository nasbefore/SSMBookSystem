<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.TbUserMapper">
    <resultMap id="BaseResultMap" type="po.TbUser">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userName" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="registerDate" property="registerdate" jdbcType="BIGINT"/>
        <result column="afterdate" property="afterdate" jdbcType="BIGINT"/>
        <result column="realName" property="realname" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="CHAR"/>
        <result column="telNum" property="telnum" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="idcard" property="idcard" jdbcType="VARCHAR"/>
        <result column="headimg" property="headimg" jdbcType="VARCHAR"/>
        <result column="isOnline" property="isonline" jdbcType="INTEGER"/>
        <result column="grade" property="grade" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, userName, password, registerDate, afterdate, realName, age, sex, telNum, email, 
    idcard, headimg, isOnline, grade
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.TbUserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="po.TbUserExample">
        delete from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="po.TbUser">
    insert into tb_user (id, userName, password, 
      registerDate, afterdate, realName, 
      age, sex, telNum, email, 
      idcard, headimg, isOnline, 
      grade)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{registerdate,jdbcType=BIGINT}, #{afterdate,jdbcType=BIGINT}, #{realname,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=CHAR}, #{telnum,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR}, #{headimg,jdbcType=VARCHAR}, #{isonline,jdbcType=INTEGER}, 
      #{grade,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="po.TbUser">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                userName,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="registerdate != null">
                registerDate,
            </if>
            <if test="afterdate != null">
                afterdate,
            </if>
            <if test="realname != null">
                realName,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="telnum != null">
                telNum,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="idcard != null">
                idcard,
            </if>
            <if test="headimg != null">
                headimg,
            </if>
            <if test="isonline != null">
                isOnline,
            </if>
            <if test="grade != null">
                grade,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="registerdate != null">
                #{registerdate,jdbcType=BIGINT},
            </if>
            <if test="afterdate != null">
                #{afterdate,jdbcType=BIGINT},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="telnum != null">
                #{telnum,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="headimg != null">
                #{headimg,jdbcType=VARCHAR},
            </if>
            <if test="isonline != null">
                #{isonline,jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="po.TbUserExample" resultType="java.lang.Integer">
        select count(*) from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                userName = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.registerdate != null">
                registerDate = #{record.registerdate,jdbcType=BIGINT},
            </if>
            <if test="record.afterdate != null">
                afterdate = #{record.afterdate,jdbcType=BIGINT},
            </if>
            <if test="record.realname != null">
                realName = #{record.realname,jdbcType=VARCHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=CHAR},
            </if>
            <if test="record.telnum != null">
                telNum = #{record.telnum,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.idcard != null">
                idcard = #{record.idcard,jdbcType=VARCHAR},
            </if>
            <if test="record.headimg != null">
                headimg = #{record.headimg,jdbcType=VARCHAR},
            </if>
            <if test="record.isonline != null">
                isOnline = #{record.isonline,jdbcType=INTEGER},
            </if>
            <if test="record.grade != null">
                grade = #{record.grade,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_user
        set id = #{record.id,jdbcType=INTEGER},
        userName = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        registerDate = #{record.registerdate,jdbcType=BIGINT},
        afterdate = #{record.afterdate,jdbcType=BIGINT},
        realName = #{record.realname,jdbcType=VARCHAR},
        age = #{record.age,jdbcType=INTEGER},
        sex = #{record.sex,jdbcType=CHAR},
        telNum = #{record.telnum,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        idcard = #{record.idcard,jdbcType=VARCHAR},
        headimg = #{record.headimg,jdbcType=VARCHAR},
        isOnline = #{record.isonline,jdbcType=INTEGER},
        grade = #{record.grade,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="po.TbUser">
        update tb_user
        <set>
            <if test="username != null">
                userName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="registerdate != null">
                registerDate = #{registerdate,jdbcType=BIGINT},
            </if>
            <if test="afterdate != null">
                afterdate = #{afterdate,jdbcType=BIGINT},
            </if>
            <if test="realname != null">
                realName = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="telnum != null">
                telNum = #{telnum,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                idcard = #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="headimg != null">
                headimg = #{headimg,jdbcType=VARCHAR},
            </if>
            <if test="isonline != null">
                isOnline = #{isonline,jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="po.TbUser">
    update tb_user
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      registerDate = #{registerdate,jdbcType=BIGINT},
      afterdate = #{afterdate,jdbcType=BIGINT},
      realName = #{realname,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=CHAR},
      telNum = #{telnum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      headimg = #{headimg,jdbcType=VARCHAR},
      isOnline = #{isonline,jdbcType=INTEGER},
      grade = #{grade,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>